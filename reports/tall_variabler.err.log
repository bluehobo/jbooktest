Traceback (most recent call last):
  File "C:\Users\sir\AppData\Local\anaconda3\Lib\site-packages\jupyter_cache\executors\utils.py", line 58, in single_nb_execution
    executenb(
  File "C:\Users\sir\AppData\Local\anaconda3\Lib\site-packages\nbclient\client.py", line 1204, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sir\AppData\Local\anaconda3\Lib\site-packages\nbclient\util.py", line 84, in wrapped
    return just_run(coro(*args, **kwargs))
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sir\AppData\Local\anaconda3\Lib\site-packages\nbclient\util.py", line 62, in just_run
    return loop.run_until_complete(coro)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\sir\AppData\Local\anaconda3\Lib\asyncio\base_events.py", line 653, in run_until_complete
    return future.result()
           ^^^^^^^^^^^^^^^
  File "C:\Users\sir\AppData\Local\anaconda3\Lib\site-packages\nbclient\client.py", line 663, in async_execute
    await self.async_execute_cell(
  File "C:\Users\sir\AppData\Local\anaconda3\Lib\site-packages\nbclient\client.py", line 965, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "C:\Users\sir\AppData\Local\anaconda3\Lib\site-packages\nbclient\client.py", line 862, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
# Variabler og datatyper

```{admonition} L√¶ringsutbytte
Etter √• ha arbeidet med dette temaet, skal du kunne:
1. kj√∏re enkle programmer med en programmeringseditor
2. definere og gj√∏re rede for ulike variabeltyper: heltall, flyttall og strenger
3. skrive ut output ved √• bruke print-funksjonen
4. gj√∏re enkel aritmetikk i Python
5. ta input fra brukeren av programmet
6. importere og bruke biblioteker
```

## Variabler

```{admonition} Variabel
En programmeringsvariabel er en st√∏rrelse som lagrer en verdi i et program.
```

Variabler er spesielt nyttig n√•r vi skal bruke samme verdi flere ganger, eller n√•r vi skal oppdatere en verdi underveis i programmet. Et enkelt eksempel er hvis vi √∏nsker √• finne ti tall i en bestemt tallrekke. Dette kan vi beskrive slik med en pseudokode:

```{code-block} text
tall = 0
gjenta 10 ganger:
    tall = tall + 3
    vis tall p√• skjermen
```

Du kan tenke p√• en variabel som en boks vi kan putte ting i, og som vi kan modifisere, endre og hente informasjon fra underveis.

```{admonition} Hva er en pseudokode?
:class: caution, dropdown
En pseudokode er en beskrivelse av en algoritme uten √• bruke et bestemt programmeringsspr√•k. Pseudokode kan skrives p√• mange m√•ter og kan beskrives med ord, bilder og symboler.
```

```{admonition} Underveisoppgave
:class: tip
Nedenfor er et eksempel p√• en programkode i Python der vi beregner gjennomsnittshastigheten i m/s for ulike legemer som har beveget seg henholdsvis 3, 4.5, 7 og 14 meter i l√∏pet av 3 sekunder. Hva er fordelen med √• bruke variablen _t_ her?
```

```{admonition} L√∏sningsforslag
:class: tip, dropdown
Kommandoen _print_ gir oss et ouput fra programmet v√•rt. Vi sier at noe blir skrevet ut til "konsollen". Konsollen er der du f√•r output i et programmeringsmilj√∏. Inni print-kommandoen kan vi skrive flere ting. Da m√• hver variabel og hver verdi v√¶re adskilt med komma.
```
------------------

[1;36m  Cell [1;32mIn[1], line 3[1;36m[0m
[1;33m    ```{admonition} L√¶ringsutbytte[0m
[1;37m    ^[0m
[1;31mSyntaxError[0m[1;31m:[0m invalid syntax

SyntaxError: invalid syntax (3095909064.py, line 3)

